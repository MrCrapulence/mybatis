# log4j.properties
# debug, D, C, E：第一个是日志输出级别，后面都是输出目的地
log4j.rootLogger = debug, D, C, E

### console ###
log4j.appender.C = org.apache.log4j.ConsoleAppender
log4j.appender.C.Target = System.out
log4j.appender.C.layout = org.apache.log4j.PatternLayout
log4j.appender.C.layout.ConversionPattern = [financeTown-web][%p] [%-d{yyyy-MM-dd HH:mm:ss}] %C.%M(%L) | %m%n
log4j.appender.C.file.encoding=UTF-8

### log file ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.Append = true
# 对使用这个appender的日志二次过滤。
log4j.appender.D.Threshold = DEBUG
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = [financeTown-web][%p] [%-d{yyyy-MM-dd HH:mm:ss}] %C.%M(%L) | %m%n
log4j.appender.D.file.encoding=UTF-8
log4j.appender.D.File = ../logs/financeTown-web
# 按日期每天一个日志，当天是日志文件名为没有日期的文件名，会在后一天另存为追加为有以下日期格式的文件。
log4j.appender.D.DatePattern='-'yyyy-MM-dd.'log'
# 每分钟生成一个log文件
# log4j.appender.D.DatePattern='-'yyyy-MM-dd-HH-mm.'log'

### exception ###
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.Append = true
log4j.appender.E.Threshold = ERROR
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = [financeTown-web][%p] [%-d{yyyy-MM-dd HH:mm:ss}] %C.%M(%L) | %m%n
log4j.appender.E.file.encoding=UTF-8
log4j.appender.E.File = ../logs/financeTown-web_error
log4j.appender.E.DatePattern='-'yyyy-MM-dd.'log'
